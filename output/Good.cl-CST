(program (programBlocks (classDefine class Main inherits IO { (featureList (feature (method main ( ) : Object { (expression { (expression out_string ( (expression_list (expression "Enter an integer greater-than or equal-to 0: ")) )) ; (expression let input : Int <- (expression in_int ( expression_list )) in (expression if (expression (expression input) < (expression 0)) then (expression out_string ( (expression_list (expression "ERROR: Number must be greater-than or equal-to 0\n")) )) else (expression { (expression (expression out_string ( (expression_list (expression "The factorial of ")) )) . out_int ( (expression_list (expression input)) )) ; (expression (expression out_string ( (expression_list (expression " is ")) )) . out_int ( (expression_list (expression factorial ( (expression_list (expression input)) ))) )) ; (expression out_string ( (expression_list (expression "\n")) )) ; }) fi)) ; }) })) ; (feature (method factorial ( (formalList (formal num : Int)) ) : Int { (expression if (expression (expression num) = (expression 0)) then (expression 1) else (expression (expression num) * (expression factorial ( (expression_list (expression (expression num) - (expression 1))) ))) fi) })) ;) }) ;) <EOF>)